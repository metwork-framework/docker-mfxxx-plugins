name: CI

on:
  repository_dispatch:
    types:
      - metwork-trigger*
  workflow_dispatch:
    inputs:
      workflow_branch:
        description: branch to use
        required: true
        type: string
      workflow_tag:
        description: tag to use
        required: true
        type: string
      workflow_repo:
        description: repository to use (mfserv, mfdata, mfbase)
        required: true
        type: string
      workflow_rocky_version:
        description: rocky version (8, 9, 10)
        required: true
        type: string


env:
    WORKFLOW_SCRIPTS_DIR: .github/workflows
    DOCKER_WORKFLOW_SCRIPTS_DIR: /src/.github/workflows
    PAYLOAD_BRANCH: ${{ github.event.client_payload.branch}}
    PAYLOAD_TAG: ${{ github.event.client_payload.tag}}
    PAYLOAD_REPO: ${{ github.event.client_payload.repo}}
    PAYLOAD_ROCKY_VERSION: ${{ github.event.client_payload.rocky_version}}
    WORKFLOW_BRANCH: ${{ github.event.inputs.workflow_branch}}
    WORKFLOW_TAG: ${{ github.event.inputs.workflow_tag}}
    WORKFLOW_REPO: ${{ github.event.inputs.workflow_repo}}
    WORKFLOW_ROCKY_VERSION: ${{ github.event.inputs.workflow_rocky_version}}

jobs:
  ci_build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: master
      - name: set variables
        id: SetVariables
        run: |
          ${WORKFLOW_SCRIPTS_DIR}/set_variables.sh
      - name: debug env
        run: |
          env
          echo "Dockerfile"
          cat ./Dockerfile
      - name: docker build and push
        id: DockerStep
        env: 
          CACHEBUST: ${{ github.run_number }}
          BRANCH: ${{ steps.SetVariables.outputs.branch }}
          REPO: ${{ steps.SetVariables.outputs.repo }}
          IMAGE: ${{ steps.SetVariables.outputs.image }}
          ROCKY: ${{ steps.SetVariables.outputs.rocky }}
          ROCKY_NUMBER: ${{ steps.SetVariables.outputs.rocky_number }}
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          ${WORKFLOW_SCRIPTS_DIR}/docker_build.sh




